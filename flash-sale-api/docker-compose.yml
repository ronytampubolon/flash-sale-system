version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: flash-sale-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: flash-sale
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - flash-sale-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/flash-sale --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: flash-sale-redis
    restart: unless-stopped
    command: redis-server --requirepass flashredis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - flash-sale-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "flashredis", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: flash-sale-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: sysadmin
      RABBITMQ_DEFAULT_PASS: s3cur3
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - flash-sale-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Flash Sale API Application
  flash-sale-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: flash-sale-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=vGSi4aghMX17LcnFvkyRP4D5vABssnDs0WyCSQRJuikYycOeS6xZjB1XqmlwfDom
      - MONGO_URI=mongodb://mongodb:27017/flash-sale
      - REDIS_URL=redis://:flashredis@redis:6379
      - REDIS_PASSWORD=flashredis
      - RABBITMQ_URL=amqp://sysadmin:s3cur3@rabbitmq:5672
      - FLASH_STATUS=true
      - FLASH_START=09/20/2025 00:00:00
      - FLASH_END=09/20/2025 23:59:00
      - FLASH_STOCK=1000
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - flash-sale-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Development version (optional)
  flash-sale-app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: flash-sale-app-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=vGSi4aghMX17LcnFvkyRP4D5vABssnDs0WyCSQRJuikYycOeS6xZjB1XqmlwfDom
      - MONGO_URI=mongodb://mongodb:27017/flash-sale
      - REDIS_URL=redis://:flashredis@redis:6379
      - REDIS_PASSWORD=flashredis
      - RABBITMQ_URL=amqp://sysadmin:s3cur3@rabbitmq:5672
      - FLASH_STATUS=true
      - FLASH_START=09/20/2025 00:00:00
      - FLASH_END=09/20/2025 23:59:00
      - FLASH_STOCK=1000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - flash-sale-network
    profiles:
      - dev

networks:
  flash-sale-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local